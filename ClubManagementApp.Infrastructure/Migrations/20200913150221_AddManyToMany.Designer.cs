// <auto-generated />
using System;
using ClubManagementApp.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClubManagementApp.Infrastructure.Migrations
{
    [DbContext(typeof(ClubManagementContext))]
    [Migration("20200913150221_AddManyToMany")]
    partial class AddManyToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CommitteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HeadquarterAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Committee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Cotisation", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LicenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LicenceId");

                    b.HasIndex("LicenceId");

                    b.ToTable("Cotisations");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Gender", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.League", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Licence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LicenceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("LicenceTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Licences");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.LicenceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LicenceTypes");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Birthdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("GenderId")
                        .HasColumnType("smallint");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Club", b =>
                {
                    b.HasOne("ClubManagementApp.Domain.Model.Committee", "Committee")
                        .WithMany("Club")
                        .HasForeignKey("CommitteeId");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Committee", b =>
                {
                    b.HasOne("ClubManagementApp.Domain.Model.League", "League")
                        .WithMany("Committee")
                        .HasForeignKey("LeagueId");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Cotisation", b =>
                {
                    b.HasOne("ClubManagementApp.Domain.Model.Licence", "Licence")
                        .WithMany("Cotisations")
                        .HasForeignKey("LicenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClubManagementApp.Domain.Model.User", "Player")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.Licence", b =>
                {
                    b.HasOne("ClubManagementApp.Domain.Model.Club", "Club")
                        .WithMany("Licences")
                        .HasForeignKey("ClubId");

                    b.HasOne("ClubManagementApp.Domain.Model.LicenceType", "LicenceType")
                        .WithMany("Licence")
                        .HasForeignKey("LicenceTypeId");

                    b.HasOne("ClubManagementApp.Domain.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ClubManagementApp.Domain.Model.User", b =>
                {
                    b.HasOne("ClubManagementApp.Domain.Model.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");
                });
#pragma warning restore 612, 618
        }
    }
}
